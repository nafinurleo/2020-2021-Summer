Task 1: Polymorphism
**********
**********
using System;

namespace My_Work_Week5
{
    class University
    {
        public string name;
        public string id;
        Courses[] course = new Courses[5];

        //Constructor overloading
        //default constructor
        public University()
        {
        }

        //parameterized constructor
        public University(string name, string id, Courses c1, Courses c2, Courses c3, Courses c4, Courses c5)
        {
            this.name = name;
            this.id = id;
            this.course[0] = c1;
            this.course[1] = c2;
            this.course[2] = c3;
            this.course[3] = c4;
            this.course[4] = c5;

        }
        public University(string name, string id)
        {
            this.name = name;
            this.id = id;
        }
        public University(Courses c1, Courses c2, Courses c3, Courses c4, Courses c5)
        {
            this.course[0] = c1;
            this.course[1] = c2;
            this.course[2] = c3;
            this.course[3] = c4;
            this.course[4] = c5;

        }

        //method overloading
        public void canHave(string email, double cgpa)
        {
            Console.WriteLine("Cgpa:" + cgpa);
        }

        public void canHave(int age, string bloodGroup)
        {
            Console.WriteLine("Blood Group:" + bloodGroup);
        }

        //method override
        //virtual
        public virtual void show()
        {
            Console.WriteLine("\nName:" + name);
            Console.WriteLine("\nID:" + id);
            Console.WriteLine("\nCourse name:" + course[0].courseName + "\nCredit:" + course[0].credit);
            Console.WriteLine("Course name:" + course[1].courseName + "\nCredit:" + course[1].credit);
            Console.WriteLine("Course name:" + course[2].courseName + "\nCredit:" + course[2].credit);
            Console.WriteLine("Course name:" + course[3].courseName + "\nCredit:" + course[3].credit);
            Console.WriteLine("Course name:" + course[4].courseName + "\nCredit:" + course[4].credit);
            Console.ReadKey();
        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Courses
    {
        public string courseName;
        public int credit;

        //default constructor
        public Courses()
        {
        }

        //parameterized constructor
        public Courses(string courseName, int credit)
        {
            this.courseName = courseName;
            this.credit = credit;
        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Student : University
    {
        public Student() : base()
        {
        }
        public Student(string name, string id, Courses c1, Courses c2, Courses c3, Courses c4, Courses c5) : base(name, id, c1, c2, c3, c4, c5)
        {
        }

        //method overriding
        public override void show()
        {
            base.show();
        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Graduate : Student
    {
        public int creditComplete;
        public Graduate() : base()
        {
        }
        public Graduate(string name, string id, Courses c1, Courses c2, Courses c3, Courses c4, Courses c5, int creditComplete) : base(name, id, c1, c2, c3, c4, c5)
        {
            this.creditComplete = creditComplete;
        }

        //method overrriding
        public override void show()
        {
            base.show();
            Console.WriteLine("Credit Complete:" + creditComplete);
            Console.ReadKey();

        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Program
    {
        static void Main(string[] args)
        {
            Courses c1 = new Courses("Computer Graphics", 3);
            Courses c2 = new Courses("Software Engineering", 3);
            Courses c3 = new Courses("Theory Of Computation", 3);
            Courses c4 = new Courses("Digital Logic & Circuits", 3);
            Courses c5 = new Courses("Engineering Ethics", 2);

            Console.WriteLine("Student's Details:-");
            Student st = new Student("Nafinur Leo", "20-42195-1", c1, c2, c3, c4, c5);
            st.show();

            Console.WriteLine("Graduate Student's Details:-");
            Graduate gt = new Graduate("Nusaiba", "17-42788-1", c1, c2, c3, c4, c5, 148);
            gt.show();
        }
    }
}
**********
**********
Task 2: Abstraction
**********
using System;

namespace My_Work_Week5
{
    abstract class University
    {
        public string name;
        public string id;
        public string email;
        public string bloodGroup;

        //default constructor
        public University()
        {
        }

        //parameterized constructor
        public University(string name, string id, string email, string bloodGroup)
        {
            this.name = name;
            this.id = id;
            this.email = email;
            this.bloodGroup = bloodGroup;
        }
        public abstract void Payment();

        public void show()
        {
            Console.WriteLine("\nName: " + name + "\nId: " + id + "\nE-mail: " + email + "\nBlood Group: " + bloodGroup);
            Console.ReadKey();
        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Student : University
    {
        public int perCredit = 5500;
        public int Credit;

        public Student() : base()
        {
        }
        public Student(string name, string id, string email, string bloodGroup, int Credit) : base(name, id, email, bloodGroup)
        {
            this.Credit = Credit;
        }

        //overriding
        public override void Payment()
        {
            int payment = perCredit * Credit;
            Console.WriteLine("Payment: " + payment);
            Console.ReadKey();
        }
    }
}
**********
using System;

namespace My_Work_Week5
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Student's Details:-");
            University ut = new Student("Nafinur Leo", "20-42195-1", "nafinurleo@gmail.com", "A(+ve)", 14);
            ut.show();
            ut.Payment();
        }
    }
}
**********
**********
Task 3
**********
**********
using System;

namespace My_Work_Week5
{
    class Program
    {
        static void Main(string[] args)
        {
            // boxing
            object o1 = 10; // boxing
            object o2 = "Car";
            string str = o2.ToString();
            object o3 = 10.5;

            //unboxing
            int value = (int)o1;

            //store null value

            int? i = 15;
            double? d1 = 3.54;
            bool? flag = null;
            char? letter = 'a';

            //storing different type of data

            object[] obj = new object[3];
            obj[0] = 25;
            obj[1] = 'A';
            obj[2] = "Leo";
            Console.WriteLine(obj[0]);
            Console.WriteLine(obj[1]);
            Console.WriteLine(obj[2]);
            Console.ReadLine();

            //annonymous type
            var info = new { name = "Leo", age = 20, bloodGroup = "A+" };
            Console.WriteLine("Name: " + info.name + "Age: " + info.age + "Blood Group:" + info.bloodGroup);
            Console.ReadKey();
        }
    }
}